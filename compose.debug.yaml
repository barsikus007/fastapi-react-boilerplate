services:
  backend-dev:
    image: backend-dev
    build:
      context: backend/
      target: debug
    command:
      - "sh"
      - "-c"
      - |
        alembic upgrade head \
        && python ./src/db/init_db.py \
        && python -m debugpy --wait-for-client --listen 0.0.0.0:5678 \
        -m uvicorn src.main:app --reload --host 0.0.0.0
    ports:
      - 5678:5678
      - 8000:8000
    volumes:
      - ./backend/src/:/app/src/
      - ./backend/alembic/:/app/alembic/
    env_file:
      - .env
    depends_on:
      postgres-dev:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./backend/pyproject.toml

  # same as in compose.yaml but with ports
  frontend-dev:
    image: frontend-dev
    build:
      context: frontend/
      target: development
    volumes:
      - ./frontend/src/:/app/src/
    ports:
      - 5173:5173
    env_file:
      - .env
    tty: true  # for color logs

  # same as in compose.yaml but with ports
  postgres-dev:
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres-data:
